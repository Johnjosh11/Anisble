node('master') {
        def build_start_date = null;
        def install_start_date = null;
        def build_end_date = null;
        try{  
                stage ('Log Details'){
                    wrap([$class: 'BuildUser']) {
                        timestamps {
                            build_start_date= new Date() 
                            echo "Build User: ${BUILD_USER} | Build-ID: ${BUILD_NUMBER} | NODE_NAME: ${REMOTE_HOSTS_GROUP} | PORT_NO: ${PORT_NO} "
                        }
                    }
                }  
                stage ('Enable Node'){
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: "${API_USER}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {                        
                         timestamps {
                               build_start_date=new Date()
                                input 'Do you want to proceed to deploy stage'
                                install_start_date=System.currentTimeMillis()
                                sh "curl --insecure -X POST --user $USERNAME:$PASSWORD https://torni.saunalahti.fi/api/v2/${API_USER}/dist --header \"Content-Type: application/json\" --data '{\"playbook\":\"utility/prepaid/node_enable.yml\",\"inventory\":\"hosts\",\"extra_vars\":\"REMOTE_HOSTS_GROUP=${REMOTE_HOSTS_GROUP} PORT_NO=${PORT_NO}\"}' > result"
                                def job_id=readFile('result').trim().substring(8)
                                echo "JOB_ID=$job_id"
                                build_end_date=System.currentTimeMillis()
                                sleep 30
                                sh "curl --insecure --user $USERNAME:$PASSWORD https://torni.saunalahti.fi/api/v2/${API_USER}/dist/$job_id > result"
                                String RESULT=readFile('result')
                                echo "$RESULT"   
                                if(RESULT.contains('FATAL') || RESULT.contains('ERROR') || RESULT.contains('Error:') || RESULT.contains('fatal:')) {
                                        install_start_date = null;
                                        build_end_date = null;
                                        throw new Exception("Exception in the stage..")
                                }                                 
                         }
                    }
                }
                
        } finally {
              stage ('Log Details in DB'){
                    timestamps {
                        build_end_date= new Date()
                        echo "Build-ID: ${BUILD_NUMBER} | Date: ${build_end_date} "

                        if(DB_LOGGING_ENABLED == "true" || DB_LOGGING_ENABLED == "True")
                        {
                            getDatabaseConnection(id: '1', type: 'GLOBAL')
                            {    
                                wrap([$class: 'BuildUser']) {
                                    //echo "insert into deploy_details (job_name,module_name,deploy_user,tag_name,ext,remote_host,install_spec_file,build_start_date,install_start_date,build_end_date) values (\"${JOB_NAME}\",\"${MODULE_NAME}\",\"${BUILD_USER}\",\"${TAG_NAME}\",\"${EXT}\",\"${REMOTE_HOSTS_GROUP}\",\"${INSTALL_SPEC_FILE}\",\"${build_start_date}\",\"${install_start_date}\",\"${build_end_date}\")"
                                    //sql connection: '1', sql: "insert into deploy_details (job_name,module_name,deploy_user,tag_name,ext,remote_host,install_spec_file,build_start_date,install_start_date,build_end_date) values (\"${JOB_NAME}\",\"${MODULE_NAME}\",\"${BUILD_USER}\",\"${TAG_NAME}\",\"${EXT}\",\"${REMOTE_HOSTS_GROUP}\",\"${INSTALL_SPEC_FILE}\",\"${build_start_date}\",\"${install_start_date}\",\"${build_end_date}\")"
                                }

                            }
                        } else {
                            echo "Skipped...."
                        }
                    }
              }         
        }
}
